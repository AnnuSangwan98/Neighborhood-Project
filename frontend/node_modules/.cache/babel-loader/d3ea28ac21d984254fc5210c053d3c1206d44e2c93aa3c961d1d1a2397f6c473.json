{"ast":null,"code":"import _objectSpread from\"C:/Users/DELL/OneDrive/Documents/GitHub/Neighborhood-Project/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[neighborhoodData,setNeighborhoodData]=useState(null);const[crimeData,setCrimeData]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[searchParams,setSearchParams]=useState({latitude:'40.7128',longitude:'-74.0060',radius:'1000',city:'New York'});const[weights,setWeights]=useState({parks:0.15,cafes:0.15,gyms:0.10,busStops:0.20,trainStations:0.20,crimeRate:0.20});const[showWeights,setShowWeights]=useState(false);// Function to calculate neighborhood score\nconst calculateNeighborhoodScore=(neighborhoodData,crimeData,weights)=>{if(!neighborhoodData||!crimeData)return null;const radius=parseFloat(neighborhoodData.query.radius);const area=Math.PI*Math.pow(radius,2);// Area in square meters\nconst areaKm2=area/1000000;// Convert to square kilometers\n// Normalize factors to 0-1 scale\nconst factors={// Parks: 0-1 based on density (parks per km²)\nparks:Math.min(neighborhoodData.data.parks.length/(areaKm2*2),1),// Cafes: 0-1 based on density (cafes per km²)\ncafes:Math.min(neighborhoodData.data.cafes.length/(areaKm2*5),1),// Gyms: 0-1 based on density (gyms per km²)\ngyms:Math.min(neighborhoodData.data.gyms.length/(areaKm2*1),1),// Bus stops: 0-1 based on density (bus stops per km²)\nbusStops:Math.min(neighborhoodData.data.busStops.length/(areaKm2*10),1),// Train stations: 0-1 based on density (stations per km²)\ntrainStations:Math.min(neighborhoodData.data.trainStations.length/(areaKm2*0.5),1),// Crime rate: 0-1 (inverted, so lower crime = higher score)\ncrimeRate:Math.max(0,1-crimeData.data.crimeIndex/100)};// Calculate weighted score\nconst weightedScore=Object.keys(factors).reduce((total,factor)=>{return total+factors[factor]*weights[factor];},0);// Calculate individual factor scores\nconst factorScores=Object.keys(factors).map(factor=>({name:factor,normalizedValue:factors[factor],weightedScore:factors[factor]*weights[factor],weight:weights[factor]}));return{totalScore:Math.round(weightedScore*100)/100,totalScorePercentage:Math.round(weightedScore*100),factors:factorScores,breakdown:{parks:{count:neighborhoodData.data.parks.length,density:Math.round(neighborhoodData.data.parks.length/areaKm2*100)/100,normalized:Math.round(factors.parks*100)/100,score:Math.round(factors.parks*weights.parks*100)/100},cafes:{count:neighborhoodData.data.cafes.length,density:Math.round(neighborhoodData.data.cafes.length/areaKm2*100)/100,normalized:Math.round(factors.cafes*100)/100,score:Math.round(factors.cafes*weights.cafes*100)/100},gyms:{count:neighborhoodData.data.gyms.length,density:Math.round(neighborhoodData.data.gyms.length/areaKm2*100)/100,normalized:Math.round(factors.gyms*100)/100,score:Math.round(factors.gyms*weights.gyms*100)/100},busStops:{count:neighborhoodData.data.busStops.length,density:Math.round(neighborhoodData.data.busStops.length/areaKm2*100)/100,normalized:Math.round(factors.busStops*100)/100,score:Math.round(factors.busStops*weights.busStops*100)/100},trainStations:{count:neighborhoodData.data.trainStations.length,density:Math.round(neighborhoodData.data.trainStations.length/areaKm2*100)/100,normalized:Math.round(factors.trainStations*100)/100,score:Math.round(factors.trainStations*weights.trainStations*100)/100},crimeRate:{crimeIndex:crimeData.data.crimeIndex,safetyIndex:crimeData.data.safetyIndex,normalized:Math.round(factors.crimeRate*100)/100,score:Math.round(factors.crimeRate*weights.crimeRate*100)/100}}};};const getScoreLevel=score=>{if(score>=0.8)return{level:'Excellent',color:'#4CAF50',emoji:'🏆'};if(score>=0.6)return{level:'Good',color:'#8BC34A',emoji:'👍'};if(score>=0.4)return{level:'Fair',color:'#FFC107',emoji:'😐'};if(score>=0.2)return{level:'Poor',color:'#FF9800',emoji:'😕'};return{level:'Very Poor',color:'#F44336',emoji:'😞'};};const fetchData=async()=>{setLoading(true);setError(null);try{// Fetch both APIs in parallel\nconst[neighborhoodResponse,crimeResponse]=await Promise.all([fetch(\"https://neighborhood-project-1.onrender.com/api/neighborhood-data?latitude=\".concat(searchParams.latitude,\"&longitude=\").concat(searchParams.longitude,\"&radius=\").concat(searchParams.radius)),fetch(\"https://neighborhood-project-1.onrender.com/api/crime-data?city=\".concat(encodeURIComponent(searchParams.city)))]);if(!neighborhoodResponse.ok){throw new Error(\"Neighborhood API error: \".concat(neighborhoodResponse.status));}if(!crimeResponse.ok){throw new Error(\"Crime API error: \".concat(crimeResponse.status));}const neighborhoodResult=await neighborhoodResponse.json();const crimeResult=await crimeResponse.json();setNeighborhoodData(neighborhoodResult);setCrimeData(crimeResult);}catch(err){setError(err.message);console.error('Error fetching data:',err);}finally{setLoading(false);}};useEffect(()=>{fetchData();},[]);const handleSearch=e=>{e.preventDefault();fetchData();};const handleInputChange=e=>{const{name,value}=e.target;setSearchParams(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));};const handleWeightChange=(factor,value)=>{setWeights(prev=>_objectSpread(_objectSpread({},prev),{},{[factor]:parseFloat(value)}));};const getCrimeLevel=crimeIndex=>{if(crimeIndex<=20)return{level:'Very Low',color:'#4CAF50'};if(crimeIndex<=40)return{level:'Low',color:'#8BC34A'};if(crimeIndex<=60)return{level:'Moderate',color:'#FFC107'};if(crimeIndex<=80)return{level:'High',color:'#FF9800'};return{level:'Very High',color:'#F44336'};};const getSafetyLevel=safetyIndex=>{if(safetyIndex>=80)return{level:'Very Safe',color:'#4CAF50'};if(safetyIndex>=60)return{level:'Safe',color:'#8BC34A'};if(safetyIndex>=40)return{level:'Moderate',color:'#FFC107'};if(safetyIndex>=20)return{level:'Unsafe',color:'#FF9800'};return{level:'Very Unsafe',color:'#F44336'};};// Calculate score when data is available\nconst neighborhoodScore=calculateNeighborhoodScore(neighborhoodData,crimeData,weights);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Neighborhood Explorer\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Discover parks, cafes, gyms, transit, and crime statistics for any location\"})]}),/*#__PURE__*/_jsxs(\"main\",{className:\"App-main\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"search-section\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSearch,className:\"search-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"latitude\",children:\"Latitude:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",step:\"any\",id:\"latitude\",name:\"latitude\",value:searchParams.latitude,onChange:handleInputChange,placeholder:\"40.7128\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"longitude\",children:\"Longitude:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",step:\"any\",id:\"longitude\",name:\"longitude\",value:searchParams.longitude,onChange:handleInputChange,placeholder:\"-74.0060\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"radius\",children:\"Radius (meters):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"radius\",name:\"radius\",value:searchParams.radius,onChange:handleInputChange,placeholder:\"1000\",min:\"100\",max:\"10000\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city\",children:\"City Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"city\",name:\"city\",value:searchParams.city,onChange:handleInputChange,placeholder:\"New York\",required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,children:loading?'Loading...':'Search Location'})]})}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Error\"}),/*#__PURE__*/_jsx(\"p\",{children:error})]}),loading&&/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Fetching data...\"})}),!loading&&!error&&(neighborhoodData||crimeData)&&/*#__PURE__*/_jsxs(\"div\",{className:\"results-container\",children:[neighborhoodScore&&/*#__PURE__*/_jsxs(\"div\",{className:\"data-section score-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83C\\uDFC6 Neighborhood Score\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-display\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"main-score\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"score-value\",style:{color:getScoreLevel(neighborhoodScore.totalScore).color},children:[neighborhoodScore.totalScorePercentage,\"%\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-level\",children:[getScoreLevel(neighborhoodScore.totalScore).emoji,\" \",getScoreLevel(neighborhoodScore.totalScore).level]})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"weights-toggle\",onClick:()=>setShowWeights(!showWeights),children:[showWeights?'Hide':'Show',\" Scoring Weights\"]})]}),showWeights&&/*#__PURE__*/_jsxs(\"div\",{className:\"weights-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Adjust Scoring Weights\"}),/*#__PURE__*/_jsx(\"div\",{className:\"weights-grid\",children:Object.entries(weights).map(_ref=>{let[factor,weight]=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"weight-item\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:factor,children:[factor==='parks'&&'🌳 Parks',factor==='cafes'&&'☕ Cafes',factor==='gyms'&&'💪 Gyms',factor==='busStops'&&'🚌 Bus Stops',factor==='trainStations'&&'🚆 Train Stations',factor==='crimeRate'&&'🛡️ Safety']}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",id:factor,min:\"0\",max:\"1\",step:\"0.05\",value:weight,onChange:e=>handleWeightChange(factor,e.target.value)}),/*#__PURE__*/_jsxs(\"span\",{className:\"weight-value\",children:[Math.round(weight*100),\"%\"]})]},factor);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"weight-total\",children:[\"Total: \",Math.round(Object.values(weights).reduce((sum,w)=>sum+w,0)*100),\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-breakdown\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Score Breakdown\"}),/*#__PURE__*/_jsx(\"div\",{className:\"breakdown-grid\",children:Object.entries(neighborhoodScore.breakdown).map(_ref2=>{let[factor,data]=_ref2;return/*#__PURE__*/_jsxs(\"div\",{className:\"breakdown-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"factor-name\",children:[factor==='parks'&&'🌳 Parks',factor==='cafes'&&'☕ Cafes',factor==='gyms'&&'💪 Gyms',factor==='busStops'&&'🚌 Bus Stops',factor==='trainStations'&&'🚆 Train Stations',factor==='crimeRate'&&'🛡️ Safety']}),/*#__PURE__*/_jsxs(\"div\",{className:\"factor-details\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"factor-count\",children:factor==='crimeRate'?\"Crime: \".concat(data.crimeIndex,\"/100\"):\"\".concat(data.count,\" found\")}),/*#__PURE__*/_jsx(\"div\",{className:\"factor-density\",children:factor==='crimeRate'?\"Safety: \".concat(data.safetyIndex,\"/100\"):\"\".concat(data.density,\"/km\\xB2\")}),/*#__PURE__*/_jsxs(\"div\",{className:\"factor-score\",children:[\"Score: \",data.score.toFixed(2),\" (\",data.normalized.toFixed(0),\"%)\"]})]})]},factor);})})]})]}),crimeData&&/*#__PURE__*/_jsxs(\"div\",{className:\"data-section crime-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Crime Statistics\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"crime-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Crime Index\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-value\",style:{color:getCrimeLevel(crimeData.data.crimeIndex).color},children:[crimeData.data.crimeIndex,\"/100\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:getCrimeLevel(crimeData.data.crimeIndex).level})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Safety Index\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-value\",style:{color:getSafetyLevel(crimeData.data.safetyIndex).color},children:[crimeData.data.safetyIndex,\"/100\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:getSafetyLevel(crimeData.data.safetyIndex).level})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Crime Rate\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:crimeData.data.crimeRate})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"data-meta\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"City:\"}),\" \",crimeData.data.city]}),crimeData.data.population&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Population:\"}),\" \",crimeData.data.population.toLocaleString()]}),crimeData.data.country&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Country:\"}),\" \",crimeData.data.country]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Source:\"}),\" \",crimeData.source]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Last Updated:\"}),\" \",new Date(crimeData.data.lastUpdated).toLocaleString()]})]}),crimeData.data.note&&/*#__PURE__*/_jsx(\"div\",{className:\"note\",children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Note:\"}),\" \",crimeData.data.note]})})]}),neighborhoodData&&/*#__PURE__*/_jsxs(\"div\",{className:\"data-section neighborhood-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Neighborhood Amenities\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"amenities-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"amenity-category\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83C\\uDF33 Parks (\",neighborhoodData.summary.parks,\")\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"amenity-list\",children:neighborhoodData.data.parks.length>0?neighborhoodData.data.parks.map(park=>/*#__PURE__*/_jsxs(\"div\",{className:\"amenity-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:park.name}),park.lat&&park.lon&&/*#__PURE__*/_jsxs(\"div\",{className:\"coordinates\",children:[park.lat.toFixed(4),\", \",park.lon.toFixed(4)]})]},park.id)):/*#__PURE__*/_jsx(\"p\",{children:\"No parks found in this area\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"amenity-category\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\u2615 Cafes (\",neighborhoodData.summary.cafes,\")\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"amenity-list\",children:neighborhoodData.data.cafes.length>0?neighborhoodData.data.cafes.map(cafe=>/*#__PURE__*/_jsxs(\"div\",{className:\"amenity-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:cafe.name}),cafe.lat&&cafe.lon&&/*#__PURE__*/_jsxs(\"div\",{className:\"coordinates\",children:[cafe.lat.toFixed(4),\", \",cafe.lon.toFixed(4)]})]},cafe.id)):/*#__PURE__*/_jsx(\"p\",{children:\"No cafes found in this area\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"amenity-category\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83D\\uDCAA Gyms (\",neighborhoodData.summary.gyms,\")\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"amenity-list\",children:neighborhoodData.data.gyms.length>0?neighborhoodData.data.gyms.map(gym=>/*#__PURE__*/_jsxs(\"div\",{className:\"amenity-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:gym.name}),gym.lat&&gym.lon&&/*#__PURE__*/_jsxs(\"div\",{className:\"coordinates\",children:[gym.lat.toFixed(4),\", \",gym.lon.toFixed(4)]})]},gym.id)):/*#__PURE__*/_jsx(\"p\",{children:\"No gyms found in this area\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"amenity-category\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83D\\uDE8C Bus Stops (\",neighborhoodData.summary.busStops,\")\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"amenity-list\",children:neighborhoodData.data.busStops.length>0?neighborhoodData.data.busStops.map(stop=>/*#__PURE__*/_jsxs(\"div\",{className:\"amenity-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:stop.name}),stop.lat&&stop.lon&&/*#__PURE__*/_jsxs(\"div\",{className:\"coordinates\",children:[stop.lat.toFixed(4),\", \",stop.lon.toFixed(4)]})]},stop.id)):/*#__PURE__*/_jsx(\"p\",{children:\"No bus stops found in this area\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"amenity-category\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83D\\uDE86 Train Stations (\",neighborhoodData.summary.trainStations,\")\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"amenity-list\",children:neighborhoodData.data.trainStations.length>0?neighborhoodData.data.trainStations.map(station=>/*#__PURE__*/_jsxs(\"div\",{className:\"amenity-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:station.name}),station.lat&&station.lon&&/*#__PURE__*/_jsxs(\"div\",{className:\"coordinates\",children:[station.lat.toFixed(4),\", \",station.lon.toFixed(4)]})]},station.id)):/*#__PURE__*/_jsx(\"p\",{children:\"No train stations found in this area\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"data-meta\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Search Area:\"}),\" \",neighborhoodData.query.radius,\"m radius around (\",neighborhoodData.query.latitude,\", \",neighborhoodData.query.longitude,\")\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Total Amenities Found:\"}),\" \",neighborhoodData.summary.total]})]})]})]})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","App","neighborhoodData","setNeighborhoodData","crimeData","setCrimeData","loading","setLoading","error","setError","searchParams","setSearchParams","latitude","longitude","radius","city","weights","setWeights","parks","cafes","gyms","busStops","trainStations","crimeRate","showWeights","setShowWeights","calculateNeighborhoodScore","parseFloat","query","area","Math","PI","pow","areaKm2","factors","min","data","length","max","crimeIndex","weightedScore","Object","keys","reduce","total","factor","factorScores","map","name","normalizedValue","weight","totalScore","round","totalScorePercentage","breakdown","count","density","normalized","score","safetyIndex","getScoreLevel","level","color","emoji","fetchData","neighborhoodResponse","crimeResponse","Promise","all","fetch","concat","encodeURIComponent","ok","Error","status","neighborhoodResult","json","crimeResult","err","message","console","handleSearch","e","preventDefault","handleInputChange","value","target","prev","_objectSpread","handleWeightChange","getCrimeLevel","getSafetyLevel","neighborhoodScore","className","children","onSubmit","htmlFor","type","step","id","onChange","placeholder","required","disabled","style","onClick","entries","_ref","values","sum","w","_ref2","toFixed","population","toLocaleString","country","source","Date","lastUpdated","note","summary","park","lat","lon","cafe","gym","stop","station"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/Neighborhood-Project/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [neighborhoodData, setNeighborhoodData] = useState(null);\r\n  const [crimeData, setCrimeData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [searchParams, setSearchParams] = useState({\r\n    latitude: '40.7128',\r\n    longitude: '-74.0060',\r\n    radius: '1000',\r\n    city: 'New York'\r\n  });\r\n  const [weights, setWeights] = useState({\r\n    parks: 0.15,\r\n    cafes: 0.15,\r\n    gyms: 0.10,\r\n    busStops: 0.20,\r\n    trainStations: 0.20,\r\n    crimeRate: 0.20\r\n  });\r\n  const [showWeights, setShowWeights] = useState(false);\r\n\r\n  // Function to calculate neighborhood score\r\n  const calculateNeighborhoodScore = (neighborhoodData, crimeData, weights) => {\r\n    if (!neighborhoodData || !crimeData) return null;\r\n\r\n    const radius = parseFloat(neighborhoodData.query.radius);\r\n    const area = Math.PI * Math.pow(radius, 2); // Area in square meters\r\n    const areaKm2 = area / 1000000; // Convert to square kilometers\r\n\r\n    // Normalize factors to 0-1 scale\r\n    const factors = {\r\n      // Parks: 0-1 based on density (parks per km²)\r\n      parks: Math.min(neighborhoodData.data.parks.length / (areaKm2 * 2), 1),\r\n      \r\n      // Cafes: 0-1 based on density (cafes per km²)\r\n      cafes: Math.min(neighborhoodData.data.cafes.length / (areaKm2 * 5), 1),\r\n      \r\n      // Gyms: 0-1 based on density (gyms per km²)\r\n      gyms: Math.min(neighborhoodData.data.gyms.length / (areaKm2 * 1), 1),\r\n      \r\n      // Bus stops: 0-1 based on density (bus stops per km²)\r\n      busStops: Math.min(neighborhoodData.data.busStops.length / (areaKm2 * 10), 1),\r\n      \r\n      // Train stations: 0-1 based on density (stations per km²)\r\n      trainStations: Math.min(neighborhoodData.data.trainStations.length / (areaKm2 * 0.5), 1),\r\n      \r\n      // Crime rate: 0-1 (inverted, so lower crime = higher score)\r\n      crimeRate: Math.max(0, 1 - (crimeData.data.crimeIndex / 100))\r\n    };\r\n\r\n    // Calculate weighted score\r\n    const weightedScore = Object.keys(factors).reduce((total, factor) => {\r\n      return total + (factors[factor] * weights[factor]);\r\n    }, 0);\r\n\r\n    // Calculate individual factor scores\r\n    const factorScores = Object.keys(factors).map(factor => ({\r\n      name: factor,\r\n      normalizedValue: factors[factor],\r\n      weightedScore: factors[factor] * weights[factor],\r\n      weight: weights[factor]\r\n    }));\r\n\r\n    return {\r\n      totalScore: Math.round(weightedScore * 100) / 100,\r\n      totalScorePercentage: Math.round(weightedScore * 100),\r\n      factors: factorScores,\r\n      breakdown: {\r\n        parks: {\r\n          count: neighborhoodData.data.parks.length,\r\n          density: Math.round((neighborhoodData.data.parks.length / areaKm2) * 100) / 100,\r\n          normalized: Math.round(factors.parks * 100) / 100,\r\n          score: Math.round(factors.parks * weights.parks * 100) / 100\r\n        },\r\n        cafes: {\r\n          count: neighborhoodData.data.cafes.length,\r\n          density: Math.round((neighborhoodData.data.cafes.length / areaKm2) * 100) / 100,\r\n          normalized: Math.round(factors.cafes * 100) / 100,\r\n          score: Math.round(factors.cafes * weights.cafes * 100) / 100\r\n        },\r\n        gyms: {\r\n          count: neighborhoodData.data.gyms.length,\r\n          density: Math.round((neighborhoodData.data.gyms.length / areaKm2) * 100) / 100,\r\n          normalized: Math.round(factors.gyms * 100) / 100,\r\n          score: Math.round(factors.gyms * weights.gyms * 100) / 100\r\n        },\r\n        busStops: {\r\n          count: neighborhoodData.data.busStops.length,\r\n          density: Math.round((neighborhoodData.data.busStops.length / areaKm2) * 100) / 100,\r\n          normalized: Math.round(factors.busStops * 100) / 100,\r\n          score: Math.round(factors.busStops * weights.busStops * 100) / 100\r\n        },\r\n        trainStations: {\r\n          count: neighborhoodData.data.trainStations.length,\r\n          density: Math.round((neighborhoodData.data.trainStations.length / areaKm2) * 100) / 100,\r\n          normalized: Math.round(factors.trainStations * 100) / 100,\r\n          score: Math.round(factors.trainStations * weights.trainStations * 100) / 100\r\n        },\r\n        crimeRate: {\r\n          crimeIndex: crimeData.data.crimeIndex,\r\n          safetyIndex: crimeData.data.safetyIndex,\r\n          normalized: Math.round(factors.crimeRate * 100) / 100,\r\n          score: Math.round(factors.crimeRate * weights.crimeRate * 100) / 100\r\n        }\r\n      }\r\n    };\r\n  };\r\n\r\n  const getScoreLevel = (score) => {\r\n    if (score >= 0.8) return { level: 'Excellent', color: '#4CAF50', emoji: '🏆' };\r\n    if (score >= 0.6) return { level: 'Good', color: '#8BC34A', emoji: '👍' };\r\n    if (score >= 0.4) return { level: 'Fair', color: '#FFC107', emoji: '😐' };\r\n    if (score >= 0.2) return { level: 'Poor', color: '#FF9800', emoji: '😕' };\r\n    return { level: 'Very Poor', color: '#F44336', emoji: '😞' };\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // Fetch both APIs in parallel\r\n      const [neighborhoodResponse, crimeResponse] = await Promise.all([\r\n        fetch(`https://neighborhood-project-1.onrender.com/api/neighborhood-data?latitude=${searchParams.latitude}&longitude=${searchParams.longitude}&radius=${searchParams.radius}`),\r\n        fetch(`https://neighborhood-project-1.onrender.com/api/crime-data?city=${encodeURIComponent(searchParams.city)}`)\r\n      ]);\r\n\r\n      if (!neighborhoodResponse.ok) {\r\n        throw new Error(`Neighborhood API error: ${neighborhoodResponse.status}`);\r\n      }\r\n\r\n      if (!crimeResponse.ok) {\r\n        throw new Error(`Crime API error: ${crimeResponse.status}`);\r\n      }\r\n\r\n      const neighborhoodResult = await neighborhoodResponse.json();\r\n      const crimeResult = await crimeResponse.json();\r\n\r\n      setNeighborhoodData(neighborhoodResult);\r\n      setCrimeData(crimeResult);\r\n\r\n    } catch (err) {\r\n      setError(err.message);\r\n      console.error('Error fetching data:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    fetchData();\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setSearchParams(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleWeightChange = (factor, value) => {\r\n    setWeights(prev => ({\r\n      ...prev,\r\n      [factor]: parseFloat(value)\r\n    }));\r\n  };\r\n\r\n  const getCrimeLevel = (crimeIndex) => {\r\n    if (crimeIndex <= 20) return { level: 'Very Low', color: '#4CAF50' };\r\n    if (crimeIndex <= 40) return { level: 'Low', color: '#8BC34A' };\r\n    if (crimeIndex <= 60) return { level: 'Moderate', color: '#FFC107' };\r\n    if (crimeIndex <= 80) return { level: 'High', color: '#FF9800' };\r\n    return { level: 'Very High', color: '#F44336' };\r\n  };\r\n\r\n  const getSafetyLevel = (safetyIndex) => {\r\n    if (safetyIndex >= 80) return { level: 'Very Safe', color: '#4CAF50' };\r\n    if (safetyIndex >= 60) return { level: 'Safe', color: '#8BC34A' };\r\n    if (safetyIndex >= 40) return { level: 'Moderate', color: '#FFC107' };\r\n    if (safetyIndex >= 20) return { level: 'Unsafe', color: '#FF9800' };\r\n    return { level: 'Very Unsafe', color: '#F44336' };\r\n  };\r\n\r\n  // Calculate score when data is available\r\n  const neighborhoodScore = calculateNeighborhoodScore(neighborhoodData, crimeData, weights);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Neighborhood Explorer</h1>\r\n        <p>Discover parks, cafes, gyms, transit, and crime statistics for any location</p>\r\n      </header>\r\n\r\n      <main className=\"App-main\">\r\n        {/* Search Form */}\r\n        <div className=\"search-section\">\r\n          <form onSubmit={handleSearch} className=\"search-form\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"latitude\">Latitude:</label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"any\"\r\n                id=\"latitude\"\r\n                name=\"latitude\"\r\n                value={searchParams.latitude}\r\n                onChange={handleInputChange}\r\n                placeholder=\"40.7128\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"longitude\">Longitude:</label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"any\"\r\n                id=\"longitude\"\r\n                name=\"longitude\"\r\n                value={searchParams.longitude}\r\n                onChange={handleInputChange}\r\n                placeholder=\"-74.0060\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"radius\">Radius (meters):</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"radius\"\r\n                name=\"radius\"\r\n                value={searchParams.radius}\r\n                onChange={handleInputChange}\r\n                placeholder=\"1000\"\r\n                min=\"100\"\r\n                max=\"10000\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"city\">City Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"city\"\r\n                name=\"city\"\r\n                value={searchParams.city}\r\n                onChange={handleInputChange}\r\n                placeholder=\"New York\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <button type=\"submit\" disabled={loading}>\r\n              {loading ? 'Loading...' : 'Search Location'}\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        {/* Error Display */}\r\n        {error && (\r\n          <div className=\"error-message\">\r\n            <h3>Error</h3>\r\n            <p>{error}</p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Loading State */}\r\n        {loading && (\r\n          <div className=\"loading\">\r\n            <p>Fetching data...</p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Results Display */}\r\n        {!loading && !error && (neighborhoodData || crimeData) && (\r\n          <div className=\"results-container\">\r\n            {/* Neighborhood Score Section */}\r\n            {neighborhoodScore && (\r\n              <div className=\"data-section score-section\">\r\n                <h2>🏆 Neighborhood Score</h2>\r\n                <div className=\"score-display\">\r\n                  <div className=\"main-score\">\r\n                    <div className=\"score-value\" style={{ color: getScoreLevel(neighborhoodScore.totalScore).color }}>\r\n                      {neighborhoodScore.totalScorePercentage}%\r\n                    </div>\r\n                    <div className=\"score-level\">\r\n                      {getScoreLevel(neighborhoodScore.totalScore).emoji} {getScoreLevel(neighborhoodScore.totalScore).level}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <button \r\n                    className=\"weights-toggle\"\r\n                    onClick={() => setShowWeights(!showWeights)}\r\n                  >\r\n                    {showWeights ? 'Hide' : 'Show'} Scoring Weights\r\n                  </button>\r\n                </div>\r\n\r\n                {showWeights && (\r\n                  <div className=\"weights-section\">\r\n                    <h3>Adjust Scoring Weights</h3>\r\n                    <div className=\"weights-grid\">\r\n                      {Object.entries(weights).map(([factor, weight]) => (\r\n                        <div key={factor} className=\"weight-item\">\r\n                          <label htmlFor={factor}>\r\n                            {factor === 'parks' && '🌳 Parks'}\r\n                            {factor === 'cafes' && '☕ Cafes'}\r\n                            {factor === 'gyms' && '💪 Gyms'}\r\n                            {factor === 'busStops' && '🚌 Bus Stops'}\r\n                            {factor === 'trainStations' && '🚆 Train Stations'}\r\n                            {factor === 'crimeRate' && '🛡️ Safety'}\r\n                          </label>\r\n                          <input\r\n                            type=\"range\"\r\n                            id={factor}\r\n                            min=\"0\"\r\n                            max=\"1\"\r\n                            step=\"0.05\"\r\n                            value={weight}\r\n                            onChange={(e) => handleWeightChange(factor, e.target.value)}\r\n                          />\r\n                          <span className=\"weight-value\">{Math.round(weight * 100)}%</span>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                    <div className=\"weight-total\">\r\n                      Total: {Math.round(Object.values(weights).reduce((sum, w) => sum + w, 0) * 100)}%\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"score-breakdown\">\r\n                  <h3>Score Breakdown</h3>\r\n                  <div className=\"breakdown-grid\">\r\n                    {Object.entries(neighborhoodScore.breakdown).map(([factor, data]) => (\r\n                      <div key={factor} className=\"breakdown-item\">\r\n                        <div className=\"factor-name\">\r\n                          {factor === 'parks' && '🌳 Parks'}\r\n                          {factor === 'cafes' && '☕ Cafes'}\r\n                          {factor === 'gyms' && '💪 Gyms'}\r\n                          {factor === 'busStops' && '🚌 Bus Stops'}\r\n                          {factor === 'trainStations' && '🚆 Train Stations'}\r\n                          {factor === 'crimeRate' && '🛡️ Safety'}\r\n                        </div>\r\n                        <div className=\"factor-details\">\r\n                          <div className=\"factor-count\">\r\n                            {factor === 'crimeRate' ? `Crime: ${data.crimeIndex}/100` : `${data.count} found`}\r\n                          </div>\r\n                          <div className=\"factor-density\">\r\n                            {factor === 'crimeRate' ? `Safety: ${data.safetyIndex}/100` : `${data.density}/km²`}\r\n                          </div>\r\n                          <div className=\"factor-score\">\r\n                            Score: {data.score.toFixed(2)} ({data.normalized.toFixed(0)}%)\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Crime Data Section */}\r\n            {crimeData && (\r\n              <div className=\"data-section crime-section\">\r\n                <h2>Crime Statistics</h2>\r\n                <div className=\"crime-stats\">\r\n                  <div className=\"stat-card\">\r\n                    <h3>Crime Index</h3>\r\n                    <div className=\"stat-value\" style={{ color: getCrimeLevel(crimeData.data.crimeIndex).color }}>\r\n                      {crimeData.data.crimeIndex}/100\r\n                    </div>\r\n                    <div className=\"stat-label\">{getCrimeLevel(crimeData.data.crimeIndex).level}</div>\r\n                  </div>\r\n\r\n                  <div className=\"stat-card\">\r\n                    <h3>Safety Index</h3>\r\n                    <div className=\"stat-value\" style={{ color: getSafetyLevel(crimeData.data.safetyIndex).color }}>\r\n                      {crimeData.data.safetyIndex}/100\r\n                    </div>\r\n                    <div className=\"stat-label\">{getSafetyLevel(crimeData.data.safetyIndex).level}</div>\r\n                  </div>\r\n\r\n                  <div className=\"stat-card\">\r\n                    <h3>Crime Rate</h3>\r\n                    <div className=\"stat-value\">{crimeData.data.crimeRate}</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"data-meta\">\r\n                  <p><strong>City:</strong> {crimeData.data.city}</p>\r\n                  {crimeData.data.population && <p><strong>Population:</strong> {crimeData.data.population.toLocaleString()}</p>}\r\n                  {crimeData.data.country && <p><strong>Country:</strong> {crimeData.data.country}</p>}\r\n                  <p><strong>Source:</strong> {crimeData.source}</p>\r\n                  <p><strong>Last Updated:</strong> {new Date(crimeData.data.lastUpdated).toLocaleString()}</p>\r\n                </div>\r\n\r\n                {crimeData.data.note && (\r\n                  <div className=\"note\">\r\n                    <p><strong>Note:</strong> {crimeData.data.note}</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {/* Neighborhood Data Section */}\r\n            {neighborhoodData && (\r\n              <div className=\"data-section neighborhood-section\">\r\n                <h2>Neighborhood Amenities</h2>\r\n                \r\n                <div className=\"amenities-grid\">\r\n                  <div className=\"amenity-category\">\r\n                    <h3>🌳 Parks ({neighborhoodData.summary.parks})</h3>\r\n                    <div className=\"amenity-list\">\r\n                      {neighborhoodData.data.parks.length > 0 ? (\r\n                        neighborhoodData.data.parks.map(park => (\r\n                          <div key={park.id} className=\"amenity-item\">\r\n                            <strong>{park.name}</strong>\r\n                            {park.lat && park.lon && (\r\n                              <div className=\"coordinates\">\r\n                                {park.lat.toFixed(4)}, {park.lon.toFixed(4)}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        ))\r\n                      ) : (\r\n                        <p>No parks found in this area</p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"amenity-category\">\r\n                    <h3>☕ Cafes ({neighborhoodData.summary.cafes})</h3>\r\n                    <div className=\"amenity-list\">\r\n                      {neighborhoodData.data.cafes.length > 0 ? (\r\n                        neighborhoodData.data.cafes.map(cafe => (\r\n                          <div key={cafe.id} className=\"amenity-item\">\r\n                            <strong>{cafe.name}</strong>\r\n                            {cafe.lat && cafe.lon && (\r\n                              <div className=\"coordinates\">\r\n                                {cafe.lat.toFixed(4)}, {cafe.lon.toFixed(4)}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        ))\r\n                      ) : (\r\n                        <p>No cafes found in this area</p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"amenity-category\">\r\n                    <h3>💪 Gyms ({neighborhoodData.summary.gyms})</h3>\r\n                    <div className=\"amenity-list\">\r\n                      {neighborhoodData.data.gyms.length > 0 ? (\r\n                        neighborhoodData.data.gyms.map(gym => (\r\n                          <div key={gym.id} className=\"amenity-item\">\r\n                            <strong>{gym.name}</strong>\r\n                            {gym.lat && gym.lon && (\r\n                              <div className=\"coordinates\">\r\n                                {gym.lat.toFixed(4)}, {gym.lon.toFixed(4)}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        ))\r\n                      ) : (\r\n                        <p>No gyms found in this area</p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"amenity-category\">\r\n                    <h3>🚌 Bus Stops ({neighborhoodData.summary.busStops})</h3>\r\n                    <div className=\"amenity-list\">\r\n                      {neighborhoodData.data.busStops.length > 0 ? (\r\n                        neighborhoodData.data.busStops.map(stop => (\r\n                          <div key={stop.id} className=\"amenity-item\">\r\n                            <strong>{stop.name}</strong>\r\n                            {stop.lat && stop.lon && (\r\n                              <div className=\"coordinates\">\r\n                                {stop.lat.toFixed(4)}, {stop.lon.toFixed(4)}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        ))\r\n                      ) : (\r\n                        <p>No bus stops found in this area</p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"amenity-category\">\r\n                    <h3>🚆 Train Stations ({neighborhoodData.summary.trainStations})</h3>\r\n                    <div className=\"amenity-list\">\r\n                      {neighborhoodData.data.trainStations.length > 0 ? (\r\n                        neighborhoodData.data.trainStations.map(station => (\r\n                          <div key={station.id} className=\"amenity-item\">\r\n                            <strong>{station.name}</strong>\r\n                            {station.lat && station.lon && (\r\n                              <div className=\"coordinates\">\r\n                                {station.lat.toFixed(4)}, {station.lon.toFixed(4)}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        ))\r\n                      ) : (\r\n                        <p>No train stations found in this area</p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"data-meta\">\r\n                  <p><strong>Search Area:</strong> {neighborhoodData.query.radius}m radius around ({neighborhoodData.query.latitude}, {neighborhoodData.query.longitude})</p>\r\n                  <p><strong>Total Amenities Found:</strong> {neighborhoodData.summary.total}</p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"0JAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CAC9D,KAAM,CAACS,SAAS,CAAEC,YAAY,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACa,KAAK,CAAEC,QAAQ,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACe,YAAY,CAAEC,eAAe,CAAC,CAAGhB,QAAQ,CAAC,CAC/CiB,QAAQ,CAAE,SAAS,CACnBC,SAAS,CAAE,UAAU,CACrBC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAE,UACR,CAAC,CAAC,CACF,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGtB,QAAQ,CAAC,CACrCuB,KAAK,CAAE,IAAI,CACXC,KAAK,CAAE,IAAI,CACXC,IAAI,CAAE,IAAI,CACVC,QAAQ,CAAE,IAAI,CACdC,aAAa,CAAE,IAAI,CACnBC,SAAS,CAAE,IACb,CAAC,CAAC,CACF,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAG9B,QAAQ,CAAC,KAAK,CAAC,CAErD;AACA,KAAM,CAAA+B,0BAA0B,CAAGA,CAACxB,gBAAgB,CAAEE,SAAS,CAAEY,OAAO,GAAK,CAC3E,GAAI,CAACd,gBAAgB,EAAI,CAACE,SAAS,CAAE,MAAO,KAAI,CAEhD,KAAM,CAAAU,MAAM,CAAGa,UAAU,CAACzB,gBAAgB,CAAC0B,KAAK,CAACd,MAAM,CAAC,CACxD,KAAM,CAAAe,IAAI,CAAGC,IAAI,CAACC,EAAE,CAAGD,IAAI,CAACE,GAAG,CAAClB,MAAM,CAAE,CAAC,CAAC,CAAE;AAC5C,KAAM,CAAAmB,OAAO,CAAGJ,IAAI,CAAG,OAAO,CAAE;AAEhC;AACA,KAAM,CAAAK,OAAO,CAAG,CACd;AACAhB,KAAK,CAAEY,IAAI,CAACK,GAAG,CAACjC,gBAAgB,CAACkC,IAAI,CAAClB,KAAK,CAACmB,MAAM,EAAIJ,OAAO,CAAG,CAAC,CAAC,CAAE,CAAC,CAAC,CAEtE;AACAd,KAAK,CAAEW,IAAI,CAACK,GAAG,CAACjC,gBAAgB,CAACkC,IAAI,CAACjB,KAAK,CAACkB,MAAM,EAAIJ,OAAO,CAAG,CAAC,CAAC,CAAE,CAAC,CAAC,CAEtE;AACAb,IAAI,CAAEU,IAAI,CAACK,GAAG,CAACjC,gBAAgB,CAACkC,IAAI,CAAChB,IAAI,CAACiB,MAAM,EAAIJ,OAAO,CAAG,CAAC,CAAC,CAAE,CAAC,CAAC,CAEpE;AACAZ,QAAQ,CAAES,IAAI,CAACK,GAAG,CAACjC,gBAAgB,CAACkC,IAAI,CAACf,QAAQ,CAACgB,MAAM,EAAIJ,OAAO,CAAG,EAAE,CAAC,CAAE,CAAC,CAAC,CAE7E;AACAX,aAAa,CAAEQ,IAAI,CAACK,GAAG,CAACjC,gBAAgB,CAACkC,IAAI,CAACd,aAAa,CAACe,MAAM,EAAIJ,OAAO,CAAG,GAAG,CAAC,CAAE,CAAC,CAAC,CAExF;AACAV,SAAS,CAAEO,IAAI,CAACQ,GAAG,CAAC,CAAC,CAAE,CAAC,CAAIlC,SAAS,CAACgC,IAAI,CAACG,UAAU,CAAG,GAAI,CAC9D,CAAC,CAED;AACA,KAAM,CAAAC,aAAa,CAAGC,MAAM,CAACC,IAAI,CAACR,OAAO,CAAC,CAACS,MAAM,CAAC,CAACC,KAAK,CAAEC,MAAM,GAAK,CACnE,MAAO,CAAAD,KAAK,CAAIV,OAAO,CAACW,MAAM,CAAC,CAAG7B,OAAO,CAAC6B,MAAM,CAAE,CACpD,CAAC,CAAE,CAAC,CAAC,CAEL;AACA,KAAM,CAAAC,YAAY,CAAGL,MAAM,CAACC,IAAI,CAACR,OAAO,CAAC,CAACa,GAAG,CAACF,MAAM,GAAK,CACvDG,IAAI,CAAEH,MAAM,CACZI,eAAe,CAAEf,OAAO,CAACW,MAAM,CAAC,CAChCL,aAAa,CAAEN,OAAO,CAACW,MAAM,CAAC,CAAG7B,OAAO,CAAC6B,MAAM,CAAC,CAChDK,MAAM,CAAElC,OAAO,CAAC6B,MAAM,CACxB,CAAC,CAAC,CAAC,CAEH,MAAO,CACLM,UAAU,CAAErB,IAAI,CAACsB,KAAK,CAACZ,aAAa,CAAG,GAAG,CAAC,CAAG,GAAG,CACjDa,oBAAoB,CAAEvB,IAAI,CAACsB,KAAK,CAACZ,aAAa,CAAG,GAAG,CAAC,CACrDN,OAAO,CAAEY,YAAY,CACrBQ,SAAS,CAAE,CACTpC,KAAK,CAAE,CACLqC,KAAK,CAAErD,gBAAgB,CAACkC,IAAI,CAAClB,KAAK,CAACmB,MAAM,CACzCmB,OAAO,CAAE1B,IAAI,CAACsB,KAAK,CAAElD,gBAAgB,CAACkC,IAAI,CAAClB,KAAK,CAACmB,MAAM,CAAGJ,OAAO,CAAI,GAAG,CAAC,CAAG,GAAG,CAC/EwB,UAAU,CAAE3B,IAAI,CAACsB,KAAK,CAAClB,OAAO,CAAChB,KAAK,CAAG,GAAG,CAAC,CAAG,GAAG,CACjDwC,KAAK,CAAE5B,IAAI,CAACsB,KAAK,CAAClB,OAAO,CAAChB,KAAK,CAAGF,OAAO,CAACE,KAAK,CAAG,GAAG,CAAC,CAAG,GAC3D,CAAC,CACDC,KAAK,CAAE,CACLoC,KAAK,CAAErD,gBAAgB,CAACkC,IAAI,CAACjB,KAAK,CAACkB,MAAM,CACzCmB,OAAO,CAAE1B,IAAI,CAACsB,KAAK,CAAElD,gBAAgB,CAACkC,IAAI,CAACjB,KAAK,CAACkB,MAAM,CAAGJ,OAAO,CAAI,GAAG,CAAC,CAAG,GAAG,CAC/EwB,UAAU,CAAE3B,IAAI,CAACsB,KAAK,CAAClB,OAAO,CAACf,KAAK,CAAG,GAAG,CAAC,CAAG,GAAG,CACjDuC,KAAK,CAAE5B,IAAI,CAACsB,KAAK,CAAClB,OAAO,CAACf,KAAK,CAAGH,OAAO,CAACG,KAAK,CAAG,GAAG,CAAC,CAAG,GAC3D,CAAC,CACDC,IAAI,CAAE,CACJmC,KAAK,CAAErD,gBAAgB,CAACkC,IAAI,CAAChB,IAAI,CAACiB,MAAM,CACxCmB,OAAO,CAAE1B,IAAI,CAACsB,KAAK,CAAElD,gBAAgB,CAACkC,IAAI,CAAChB,IAAI,CAACiB,MAAM,CAAGJ,OAAO,CAAI,GAAG,CAAC,CAAG,GAAG,CAC9EwB,UAAU,CAAE3B,IAAI,CAACsB,KAAK,CAAClB,OAAO,CAACd,IAAI,CAAG,GAAG,CAAC,CAAG,GAAG,CAChDsC,KAAK,CAAE5B,IAAI,CAACsB,KAAK,CAAClB,OAAO,CAACd,IAAI,CAAGJ,OAAO,CAACI,IAAI,CAAG,GAAG,CAAC,CAAG,GACzD,CAAC,CACDC,QAAQ,CAAE,CACRkC,KAAK,CAAErD,gBAAgB,CAACkC,IAAI,CAACf,QAAQ,CAACgB,MAAM,CAC5CmB,OAAO,CAAE1B,IAAI,CAACsB,KAAK,CAAElD,gBAAgB,CAACkC,IAAI,CAACf,QAAQ,CAACgB,MAAM,CAAGJ,OAAO,CAAI,GAAG,CAAC,CAAG,GAAG,CAClFwB,UAAU,CAAE3B,IAAI,CAACsB,KAAK,CAAClB,OAAO,CAACb,QAAQ,CAAG,GAAG,CAAC,CAAG,GAAG,CACpDqC,KAAK,CAAE5B,IAAI,CAACsB,KAAK,CAAClB,OAAO,CAACb,QAAQ,CAAGL,OAAO,CAACK,QAAQ,CAAG,GAAG,CAAC,CAAG,GACjE,CAAC,CACDC,aAAa,CAAE,CACbiC,KAAK,CAAErD,gBAAgB,CAACkC,IAAI,CAACd,aAAa,CAACe,MAAM,CACjDmB,OAAO,CAAE1B,IAAI,CAACsB,KAAK,CAAElD,gBAAgB,CAACkC,IAAI,CAACd,aAAa,CAACe,MAAM,CAAGJ,OAAO,CAAI,GAAG,CAAC,CAAG,GAAG,CACvFwB,UAAU,CAAE3B,IAAI,CAACsB,KAAK,CAAClB,OAAO,CAACZ,aAAa,CAAG,GAAG,CAAC,CAAG,GAAG,CACzDoC,KAAK,CAAE5B,IAAI,CAACsB,KAAK,CAAClB,OAAO,CAACZ,aAAa,CAAGN,OAAO,CAACM,aAAa,CAAG,GAAG,CAAC,CAAG,GAC3E,CAAC,CACDC,SAAS,CAAE,CACTgB,UAAU,CAAEnC,SAAS,CAACgC,IAAI,CAACG,UAAU,CACrCoB,WAAW,CAAEvD,SAAS,CAACgC,IAAI,CAACuB,WAAW,CACvCF,UAAU,CAAE3B,IAAI,CAACsB,KAAK,CAAClB,OAAO,CAACX,SAAS,CAAG,GAAG,CAAC,CAAG,GAAG,CACrDmC,KAAK,CAAE5B,IAAI,CAACsB,KAAK,CAAClB,OAAO,CAACX,SAAS,CAAGP,OAAO,CAACO,SAAS,CAAG,GAAG,CAAC,CAAG,GACnE,CACF,CACF,CAAC,CACH,CAAC,CAED,KAAM,CAAAqC,aAAa,CAAIF,KAAK,EAAK,CAC/B,GAAIA,KAAK,EAAI,GAAG,CAAE,MAAO,CAAEG,KAAK,CAAE,WAAW,CAAEC,KAAK,CAAE,SAAS,CAAEC,KAAK,CAAE,IAAK,CAAC,CAC9E,GAAIL,KAAK,EAAI,GAAG,CAAE,MAAO,CAAEG,KAAK,CAAE,MAAM,CAAEC,KAAK,CAAE,SAAS,CAAEC,KAAK,CAAE,IAAK,CAAC,CACzE,GAAIL,KAAK,EAAI,GAAG,CAAE,MAAO,CAAEG,KAAK,CAAE,MAAM,CAAEC,KAAK,CAAE,SAAS,CAAEC,KAAK,CAAE,IAAK,CAAC,CACzE,GAAIL,KAAK,EAAI,GAAG,CAAE,MAAO,CAAEG,KAAK,CAAE,MAAM,CAAEC,KAAK,CAAE,SAAS,CAAEC,KAAK,CAAE,IAAK,CAAC,CACzE,MAAO,CAAEF,KAAK,CAAE,WAAW,CAAEC,KAAK,CAAE,SAAS,CAAEC,KAAK,CAAE,IAAK,CAAC,CAC9D,CAAC,CAED,KAAM,CAAAC,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5BzD,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CAEd,GAAI,CACF;AACA,KAAM,CAACwD,oBAAoB,CAAEC,aAAa,CAAC,CAAG,KAAM,CAAAC,OAAO,CAACC,GAAG,CAAC,CAC9DC,KAAK,+EAAAC,MAAA,CAA+E5D,YAAY,CAACE,QAAQ,gBAAA0D,MAAA,CAAc5D,YAAY,CAACG,SAAS,aAAAyD,MAAA,CAAW5D,YAAY,CAACI,MAAM,CAAE,CAAC,CAC9KuD,KAAK,oEAAAC,MAAA,CAAoEC,kBAAkB,CAAC7D,YAAY,CAACK,IAAI,CAAC,CAAE,CAAC,CAClH,CAAC,CAEF,GAAI,CAACkD,oBAAoB,CAACO,EAAE,CAAE,CAC5B,KAAM,IAAI,CAAAC,KAAK,4BAAAH,MAAA,CAA4BL,oBAAoB,CAACS,MAAM,CAAE,CAAC,CAC3E,CAEA,GAAI,CAACR,aAAa,CAACM,EAAE,CAAE,CACrB,KAAM,IAAI,CAAAC,KAAK,qBAAAH,MAAA,CAAqBJ,aAAa,CAACQ,MAAM,CAAE,CAAC,CAC7D,CAEA,KAAM,CAAAC,kBAAkB,CAAG,KAAM,CAAAV,oBAAoB,CAACW,IAAI,CAAC,CAAC,CAC5D,KAAM,CAAAC,WAAW,CAAG,KAAM,CAAAX,aAAa,CAACU,IAAI,CAAC,CAAC,CAE9CzE,mBAAmB,CAACwE,kBAAkB,CAAC,CACvCtE,YAAY,CAACwE,WAAW,CAAC,CAE3B,CAAE,MAAOC,GAAG,CAAE,CACZrE,QAAQ,CAACqE,GAAG,CAACC,OAAO,CAAC,CACrBC,OAAO,CAACxE,KAAK,CAAC,sBAAsB,CAAEsE,GAAG,CAAC,CAC5C,CAAC,OAAS,CACRvE,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDX,SAAS,CAAC,IAAM,CACdoE,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAiB,YAAY,CAAIC,CAAC,EAAK,CAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBnB,SAAS,CAAC,CAAC,CACb,CAAC,CAED,KAAM,CAAAoB,iBAAiB,CAAIF,CAAC,EAAK,CAC/B,KAAM,CAAElC,IAAI,CAAEqC,KAAM,CAAC,CAAGH,CAAC,CAACI,MAAM,CAChC3E,eAAe,CAAC4E,IAAI,EAAAC,aAAA,CAAAA,aAAA,IACfD,IAAI,MACP,CAACvC,IAAI,EAAGqC,KAAK,EACb,CAAC,CACL,CAAC,CAED,KAAM,CAAAI,kBAAkB,CAAGA,CAAC5C,MAAM,CAAEwC,KAAK,GAAK,CAC5CpE,UAAU,CAACsE,IAAI,EAAAC,aAAA,CAAAA,aAAA,IACVD,IAAI,MACP,CAAC1C,MAAM,EAAGlB,UAAU,CAAC0D,KAAK,CAAC,EAC3B,CAAC,CACL,CAAC,CAED,KAAM,CAAAK,aAAa,CAAInD,UAAU,EAAK,CACpC,GAAIA,UAAU,EAAI,EAAE,CAAE,MAAO,CAAEsB,KAAK,CAAE,UAAU,CAAEC,KAAK,CAAE,SAAU,CAAC,CACpE,GAAIvB,UAAU,EAAI,EAAE,CAAE,MAAO,CAAEsB,KAAK,CAAE,KAAK,CAAEC,KAAK,CAAE,SAAU,CAAC,CAC/D,GAAIvB,UAAU,EAAI,EAAE,CAAE,MAAO,CAAEsB,KAAK,CAAE,UAAU,CAAEC,KAAK,CAAE,SAAU,CAAC,CACpE,GAAIvB,UAAU,EAAI,EAAE,CAAE,MAAO,CAAEsB,KAAK,CAAE,MAAM,CAAEC,KAAK,CAAE,SAAU,CAAC,CAChE,MAAO,CAAED,KAAK,CAAE,WAAW,CAAEC,KAAK,CAAE,SAAU,CAAC,CACjD,CAAC,CAED,KAAM,CAAA6B,cAAc,CAAIhC,WAAW,EAAK,CACtC,GAAIA,WAAW,EAAI,EAAE,CAAE,MAAO,CAAEE,KAAK,CAAE,WAAW,CAAEC,KAAK,CAAE,SAAU,CAAC,CACtE,GAAIH,WAAW,EAAI,EAAE,CAAE,MAAO,CAAEE,KAAK,CAAE,MAAM,CAAEC,KAAK,CAAE,SAAU,CAAC,CACjE,GAAIH,WAAW,EAAI,EAAE,CAAE,MAAO,CAAEE,KAAK,CAAE,UAAU,CAAEC,KAAK,CAAE,SAAU,CAAC,CACrE,GAAIH,WAAW,EAAI,EAAE,CAAE,MAAO,CAAEE,KAAK,CAAE,QAAQ,CAAEC,KAAK,CAAE,SAAU,CAAC,CACnE,MAAO,CAAED,KAAK,CAAE,aAAa,CAAEC,KAAK,CAAE,SAAU,CAAC,CACnD,CAAC,CAED;AACA,KAAM,CAAA8B,iBAAiB,CAAGlE,0BAA0B,CAACxB,gBAAgB,CAAEE,SAAS,CAAEY,OAAO,CAAC,CAE1F,mBACEhB,KAAA,QAAK6F,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClB9F,KAAA,WAAQ6F,SAAS,CAAC,YAAY,CAAAC,QAAA,eAC5BhG,IAAA,OAAAgG,QAAA,CAAI,uBAAqB,CAAI,CAAC,cAC9BhG,IAAA,MAAAgG,QAAA,CAAG,6EAA2E,CAAG,CAAC,EAC5E,CAAC,cAET9F,KAAA,SAAM6F,SAAS,CAAC,UAAU,CAAAC,QAAA,eAExBhG,IAAA,QAAK+F,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAC7B9F,KAAA,SAAM+F,QAAQ,CAAEd,YAAa,CAACY,SAAS,CAAC,aAAa,CAAAC,QAAA,eACnD9F,KAAA,QAAK6F,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBhG,IAAA,UAAOkG,OAAO,CAAC,UAAU,CAAAF,QAAA,CAAC,WAAS,CAAO,CAAC,cAC3ChG,IAAA,UACEmG,IAAI,CAAC,QAAQ,CACbC,IAAI,CAAC,KAAK,CACVC,EAAE,CAAC,UAAU,CACbnD,IAAI,CAAC,UAAU,CACfqC,KAAK,CAAE3E,YAAY,CAACE,QAAS,CAC7BwF,QAAQ,CAAEhB,iBAAkB,CAC5BiB,WAAW,CAAC,SAAS,CACrBC,QAAQ,MACT,CAAC,EACC,CAAC,cAENtG,KAAA,QAAK6F,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBhG,IAAA,UAAOkG,OAAO,CAAC,WAAW,CAAAF,QAAA,CAAC,YAAU,CAAO,CAAC,cAC7ChG,IAAA,UACEmG,IAAI,CAAC,QAAQ,CACbC,IAAI,CAAC,KAAK,CACVC,EAAE,CAAC,WAAW,CACdnD,IAAI,CAAC,WAAW,CAChBqC,KAAK,CAAE3E,YAAY,CAACG,SAAU,CAC9BuF,QAAQ,CAAEhB,iBAAkB,CAC5BiB,WAAW,CAAC,UAAU,CACtBC,QAAQ,MACT,CAAC,EACC,CAAC,cAENtG,KAAA,QAAK6F,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBhG,IAAA,UAAOkG,OAAO,CAAC,QAAQ,CAAAF,QAAA,CAAC,kBAAgB,CAAO,CAAC,cAChDhG,IAAA,UACEmG,IAAI,CAAC,QAAQ,CACbE,EAAE,CAAC,QAAQ,CACXnD,IAAI,CAAC,QAAQ,CACbqC,KAAK,CAAE3E,YAAY,CAACI,MAAO,CAC3BsF,QAAQ,CAAEhB,iBAAkB,CAC5BiB,WAAW,CAAC,MAAM,CAClBlE,GAAG,CAAC,KAAK,CACTG,GAAG,CAAC,OAAO,CACZ,CAAC,EACC,CAAC,cAENtC,KAAA,QAAK6F,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBhG,IAAA,UAAOkG,OAAO,CAAC,MAAM,CAAAF,QAAA,CAAC,YAAU,CAAO,CAAC,cACxChG,IAAA,UACEmG,IAAI,CAAC,MAAM,CACXE,EAAE,CAAC,MAAM,CACTnD,IAAI,CAAC,MAAM,CACXqC,KAAK,CAAE3E,YAAY,CAACK,IAAK,CACzBqF,QAAQ,CAAEhB,iBAAkB,CAC5BiB,WAAW,CAAC,UAAU,CACtBC,QAAQ,MACT,CAAC,EACC,CAAC,cAENxG,IAAA,WAAQmG,IAAI,CAAC,QAAQ,CAACM,QAAQ,CAAEjG,OAAQ,CAAAwF,QAAA,CACrCxF,OAAO,CAAG,YAAY,CAAG,iBAAiB,CACrC,CAAC,EACL,CAAC,CACJ,CAAC,CAGLE,KAAK,eACJR,KAAA,QAAK6F,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BhG,IAAA,OAAAgG,QAAA,CAAI,OAAK,CAAI,CAAC,cACdhG,IAAA,MAAAgG,QAAA,CAAItF,KAAK,CAAI,CAAC,EACX,CACN,CAGAF,OAAO,eACNR,IAAA,QAAK+F,SAAS,CAAC,SAAS,CAAAC,QAAA,cACtBhG,IAAA,MAAAgG,QAAA,CAAG,kBAAgB,CAAG,CAAC,CACpB,CACN,CAGA,CAACxF,OAAO,EAAI,CAACE,KAAK,GAAKN,gBAAgB,EAAIE,SAAS,CAAC,eACpDJ,KAAA,QAAK6F,SAAS,CAAC,mBAAmB,CAAAC,QAAA,EAE/BF,iBAAiB,eAChB5F,KAAA,QAAK6F,SAAS,CAAC,4BAA4B,CAAAC,QAAA,eACzChG,IAAA,OAAAgG,QAAA,CAAI,iCAAqB,CAAI,CAAC,cAC9B9F,KAAA,QAAK6F,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5B9F,KAAA,QAAK6F,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB9F,KAAA,QAAK6F,SAAS,CAAC,aAAa,CAACW,KAAK,CAAE,CAAE1C,KAAK,CAAEF,aAAa,CAACgC,iBAAiB,CAACzC,UAAU,CAAC,CAACW,KAAM,CAAE,CAAAgC,QAAA,EAC9FF,iBAAiB,CAACvC,oBAAoB,CAAC,GAC1C,EAAK,CAAC,cACNrD,KAAA,QAAK6F,SAAS,CAAC,aAAa,CAAAC,QAAA,EACzBlC,aAAa,CAACgC,iBAAiB,CAACzC,UAAU,CAAC,CAACY,KAAK,CAAC,GAAC,CAACH,aAAa,CAACgC,iBAAiB,CAACzC,UAAU,CAAC,CAACU,KAAK,EACnG,CAAC,EACH,CAAC,cAEN7D,KAAA,WACE6F,SAAS,CAAC,gBAAgB,CAC1BY,OAAO,CAAEA,CAAA,GAAMhF,cAAc,CAAC,CAACD,WAAW,CAAE,CAAAsE,QAAA,EAE3CtE,WAAW,CAAG,MAAM,CAAG,MAAM,CAAC,kBACjC,EAAQ,CAAC,EACN,CAAC,CAELA,WAAW,eACVxB,KAAA,QAAK6F,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BhG,IAAA,OAAAgG,QAAA,CAAI,wBAAsB,CAAI,CAAC,cAC/BhG,IAAA,QAAK+F,SAAS,CAAC,cAAc,CAAAC,QAAA,CAC1BrD,MAAM,CAACiE,OAAO,CAAC1F,OAAO,CAAC,CAAC+B,GAAG,CAAC4D,IAAA,MAAC,CAAC9D,MAAM,CAAEK,MAAM,CAAC,CAAAyD,IAAA,oBAC5C3G,KAAA,QAAkB6F,SAAS,CAAC,aAAa,CAAAC,QAAA,eACvC9F,KAAA,UAAOgG,OAAO,CAAEnD,MAAO,CAAAiD,QAAA,EACpBjD,MAAM,GAAK,OAAO,EAAI,UAAU,CAChCA,MAAM,GAAK,OAAO,EAAI,SAAS,CAC/BA,MAAM,GAAK,MAAM,EAAI,SAAS,CAC9BA,MAAM,GAAK,UAAU,EAAI,cAAc,CACvCA,MAAM,GAAK,eAAe,EAAI,mBAAmB,CACjDA,MAAM,GAAK,WAAW,EAAI,YAAY,EAClC,CAAC,cACR/C,IAAA,UACEmG,IAAI,CAAC,OAAO,CACZE,EAAE,CAAEtD,MAAO,CACXV,GAAG,CAAC,GAAG,CACPG,GAAG,CAAC,GAAG,CACP4D,IAAI,CAAC,MAAM,CACXb,KAAK,CAAEnC,MAAO,CACdkD,QAAQ,CAAGlB,CAAC,EAAKO,kBAAkB,CAAC5C,MAAM,CAAEqC,CAAC,CAACI,MAAM,CAACD,KAAK,CAAE,CAC7D,CAAC,cACFrF,KAAA,SAAM6F,SAAS,CAAC,cAAc,CAAAC,QAAA,EAAEhE,IAAI,CAACsB,KAAK,CAACF,MAAM,CAAG,GAAG,CAAC,CAAC,GAAC,EAAM,CAAC,GAlBzDL,MAmBL,CAAC,EACP,CAAC,CACC,CAAC,cACN7C,KAAA,QAAK6F,SAAS,CAAC,cAAc,CAAAC,QAAA,EAAC,SACrB,CAAChE,IAAI,CAACsB,KAAK,CAACX,MAAM,CAACmE,MAAM,CAAC5F,OAAO,CAAC,CAAC2B,MAAM,CAAC,CAACkE,GAAG,CAAEC,CAAC,GAAKD,GAAG,CAAGC,CAAC,CAAE,CAAC,CAAC,CAAG,GAAG,CAAC,CAAC,GAClF,EAAK,CAAC,EACH,CACN,cAED9G,KAAA,QAAK6F,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BhG,IAAA,OAAAgG,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBhG,IAAA,QAAK+F,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAC5BrD,MAAM,CAACiE,OAAO,CAACd,iBAAiB,CAACtC,SAAS,CAAC,CAACP,GAAG,CAACgE,KAAA,MAAC,CAAClE,MAAM,CAAET,IAAI,CAAC,CAAA2E,KAAA,oBAC9D/G,KAAA,QAAkB6F,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC1C9F,KAAA,QAAK6F,SAAS,CAAC,aAAa,CAAAC,QAAA,EACzBjD,MAAM,GAAK,OAAO,EAAI,UAAU,CAChCA,MAAM,GAAK,OAAO,EAAI,SAAS,CAC/BA,MAAM,GAAK,MAAM,EAAI,SAAS,CAC9BA,MAAM,GAAK,UAAU,EAAI,cAAc,CACvCA,MAAM,GAAK,eAAe,EAAI,mBAAmB,CACjDA,MAAM,GAAK,WAAW,EAAI,YAAY,EACpC,CAAC,cACN7C,KAAA,QAAK6F,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BhG,IAAA,QAAK+F,SAAS,CAAC,cAAc,CAAAC,QAAA,CAC1BjD,MAAM,GAAK,WAAW,WAAAyB,MAAA,CAAalC,IAAI,CAACG,UAAU,YAAA+B,MAAA,CAAYlC,IAAI,CAACmB,KAAK,UAAQ,CAC9E,CAAC,cACNzD,IAAA,QAAK+F,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAC5BjD,MAAM,GAAK,WAAW,YAAAyB,MAAA,CAAclC,IAAI,CAACuB,WAAW,YAAAW,MAAA,CAAYlC,IAAI,CAACoB,OAAO,WAAM,CAChF,CAAC,cACNxD,KAAA,QAAK6F,SAAS,CAAC,cAAc,CAAAC,QAAA,EAAC,SACrB,CAAC1D,IAAI,CAACsB,KAAK,CAACsD,OAAO,CAAC,CAAC,CAAC,CAAC,IAAE,CAAC5E,IAAI,CAACqB,UAAU,CAACuD,OAAO,CAAC,CAAC,CAAC,CAAC,IAC9D,EAAK,CAAC,EACH,CAAC,GAnBEnE,MAoBL,CAAC,EACP,CAAC,CACC,CAAC,EACH,CAAC,EACH,CACN,CAGAzC,SAAS,eACRJ,KAAA,QAAK6F,SAAS,CAAC,4BAA4B,CAAAC,QAAA,eACzChG,IAAA,OAAAgG,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzB9F,KAAA,QAAK6F,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B9F,KAAA,QAAK6F,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBhG,IAAA,OAAAgG,QAAA,CAAI,aAAW,CAAI,CAAC,cACpB9F,KAAA,QAAK6F,SAAS,CAAC,YAAY,CAACW,KAAK,CAAE,CAAE1C,KAAK,CAAE4B,aAAa,CAACtF,SAAS,CAACgC,IAAI,CAACG,UAAU,CAAC,CAACuB,KAAM,CAAE,CAAAgC,QAAA,EAC1F1F,SAAS,CAACgC,IAAI,CAACG,UAAU,CAAC,MAC7B,EAAK,CAAC,cACNzC,IAAA,QAAK+F,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAEJ,aAAa,CAACtF,SAAS,CAACgC,IAAI,CAACG,UAAU,CAAC,CAACsB,KAAK,CAAM,CAAC,EAC/E,CAAC,cAEN7D,KAAA,QAAK6F,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBhG,IAAA,OAAAgG,QAAA,CAAI,cAAY,CAAI,CAAC,cACrB9F,KAAA,QAAK6F,SAAS,CAAC,YAAY,CAACW,KAAK,CAAE,CAAE1C,KAAK,CAAE6B,cAAc,CAACvF,SAAS,CAACgC,IAAI,CAACuB,WAAW,CAAC,CAACG,KAAM,CAAE,CAAAgC,QAAA,EAC5F1F,SAAS,CAACgC,IAAI,CAACuB,WAAW,CAAC,MAC9B,EAAK,CAAC,cACN7D,IAAA,QAAK+F,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAEH,cAAc,CAACvF,SAAS,CAACgC,IAAI,CAACuB,WAAW,CAAC,CAACE,KAAK,CAAM,CAAC,EACjF,CAAC,cAEN7D,KAAA,QAAK6F,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBhG,IAAA,OAAAgG,QAAA,CAAI,YAAU,CAAI,CAAC,cACnBhG,IAAA,QAAK+F,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAE1F,SAAS,CAACgC,IAAI,CAACb,SAAS,CAAM,CAAC,EACzD,CAAC,EACH,CAAC,cAENvB,KAAA,QAAK6F,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB9F,KAAA,MAAA8F,QAAA,eAAGhG,IAAA,WAAAgG,QAAA,CAAQ,OAAK,CAAQ,CAAC,IAAC,CAAC1F,SAAS,CAACgC,IAAI,CAACrB,IAAI,EAAI,CAAC,CAClDX,SAAS,CAACgC,IAAI,CAAC6E,UAAU,eAAIjH,KAAA,MAAA8F,QAAA,eAAGhG,IAAA,WAAAgG,QAAA,CAAQ,aAAW,CAAQ,CAAC,IAAC,CAAC1F,SAAS,CAACgC,IAAI,CAAC6E,UAAU,CAACC,cAAc,CAAC,CAAC,EAAI,CAAC,CAC7G9G,SAAS,CAACgC,IAAI,CAAC+E,OAAO,eAAInH,KAAA,MAAA8F,QAAA,eAAGhG,IAAA,WAAAgG,QAAA,CAAQ,UAAQ,CAAQ,CAAC,IAAC,CAAC1F,SAAS,CAACgC,IAAI,CAAC+E,OAAO,EAAI,CAAC,cACpFnH,KAAA,MAAA8F,QAAA,eAAGhG,IAAA,WAAAgG,QAAA,CAAQ,SAAO,CAAQ,CAAC,IAAC,CAAC1F,SAAS,CAACgH,MAAM,EAAI,CAAC,cAClDpH,KAAA,MAAA8F,QAAA,eAAGhG,IAAA,WAAAgG,QAAA,CAAQ,eAAa,CAAQ,CAAC,IAAC,CAAC,GAAI,CAAAuB,IAAI,CAACjH,SAAS,CAACgC,IAAI,CAACkF,WAAW,CAAC,CAACJ,cAAc,CAAC,CAAC,EAAI,CAAC,EAC1F,CAAC,CAEL9G,SAAS,CAACgC,IAAI,CAACmF,IAAI,eAClBzH,IAAA,QAAK+F,SAAS,CAAC,MAAM,CAAAC,QAAA,cACnB9F,KAAA,MAAA8F,QAAA,eAAGhG,IAAA,WAAAgG,QAAA,CAAQ,OAAK,CAAQ,CAAC,IAAC,CAAC1F,SAAS,CAACgC,IAAI,CAACmF,IAAI,EAAI,CAAC,CAChD,CACN,EACE,CACN,CAGArH,gBAAgB,eACfF,KAAA,QAAK6F,SAAS,CAAC,mCAAmC,CAAAC,QAAA,eAChDhG,IAAA,OAAAgG,QAAA,CAAI,wBAAsB,CAAI,CAAC,cAE/B9F,KAAA,QAAK6F,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B9F,KAAA,QAAK6F,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/B9F,KAAA,OAAA8F,QAAA,EAAI,sBAAU,CAAC5F,gBAAgB,CAACsH,OAAO,CAACtG,KAAK,CAAC,GAAC,EAAI,CAAC,cACpDpB,IAAA,QAAK+F,SAAS,CAAC,cAAc,CAAAC,QAAA,CAC1B5F,gBAAgB,CAACkC,IAAI,CAAClB,KAAK,CAACmB,MAAM,CAAG,CAAC,CACrCnC,gBAAgB,CAACkC,IAAI,CAAClB,KAAK,CAAC6B,GAAG,CAAC0E,IAAI,eAClCzH,KAAA,QAAmB6F,SAAS,CAAC,cAAc,CAAAC,QAAA,eACzChG,IAAA,WAAAgG,QAAA,CAAS2B,IAAI,CAACzE,IAAI,CAAS,CAAC,CAC3ByE,IAAI,CAACC,GAAG,EAAID,IAAI,CAACE,GAAG,eACnB3H,KAAA,QAAK6F,SAAS,CAAC,aAAa,CAAAC,QAAA,EACzB2B,IAAI,CAACC,GAAG,CAACV,OAAO,CAAC,CAAC,CAAC,CAAC,IAAE,CAACS,IAAI,CAACE,GAAG,CAACX,OAAO,CAAC,CAAC,CAAC,EACxC,CACN,GANOS,IAAI,CAACtB,EAOV,CACN,CAAC,cAEFrG,IAAA,MAAAgG,QAAA,CAAG,6BAA2B,CAAG,CAClC,CACE,CAAC,EACH,CAAC,cAEN9F,KAAA,QAAK6F,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/B9F,KAAA,OAAA8F,QAAA,EAAI,gBAAS,CAAC5F,gBAAgB,CAACsH,OAAO,CAACrG,KAAK,CAAC,GAAC,EAAI,CAAC,cACnDrB,IAAA,QAAK+F,SAAS,CAAC,cAAc,CAAAC,QAAA,CAC1B5F,gBAAgB,CAACkC,IAAI,CAACjB,KAAK,CAACkB,MAAM,CAAG,CAAC,CACrCnC,gBAAgB,CAACkC,IAAI,CAACjB,KAAK,CAAC4B,GAAG,CAAC6E,IAAI,eAClC5H,KAAA,QAAmB6F,SAAS,CAAC,cAAc,CAAAC,QAAA,eACzChG,IAAA,WAAAgG,QAAA,CAAS8B,IAAI,CAAC5E,IAAI,CAAS,CAAC,CAC3B4E,IAAI,CAACF,GAAG,EAAIE,IAAI,CAACD,GAAG,eACnB3H,KAAA,QAAK6F,SAAS,CAAC,aAAa,CAAAC,QAAA,EACzB8B,IAAI,CAACF,GAAG,CAACV,OAAO,CAAC,CAAC,CAAC,CAAC,IAAE,CAACY,IAAI,CAACD,GAAG,CAACX,OAAO,CAAC,CAAC,CAAC,EACxC,CACN,GANOY,IAAI,CAACzB,EAOV,CACN,CAAC,cAEFrG,IAAA,MAAAgG,QAAA,CAAG,6BAA2B,CAAG,CAClC,CACE,CAAC,EACH,CAAC,cAEN9F,KAAA,QAAK6F,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/B9F,KAAA,OAAA8F,QAAA,EAAI,qBAAS,CAAC5F,gBAAgB,CAACsH,OAAO,CAACpG,IAAI,CAAC,GAAC,EAAI,CAAC,cAClDtB,IAAA,QAAK+F,SAAS,CAAC,cAAc,CAAAC,QAAA,CAC1B5F,gBAAgB,CAACkC,IAAI,CAAChB,IAAI,CAACiB,MAAM,CAAG,CAAC,CACpCnC,gBAAgB,CAACkC,IAAI,CAAChB,IAAI,CAAC2B,GAAG,CAAC8E,GAAG,eAChC7H,KAAA,QAAkB6F,SAAS,CAAC,cAAc,CAAAC,QAAA,eACxChG,IAAA,WAAAgG,QAAA,CAAS+B,GAAG,CAAC7E,IAAI,CAAS,CAAC,CAC1B6E,GAAG,CAACH,GAAG,EAAIG,GAAG,CAACF,GAAG,eACjB3H,KAAA,QAAK6F,SAAS,CAAC,aAAa,CAAAC,QAAA,EACzB+B,GAAG,CAACH,GAAG,CAACV,OAAO,CAAC,CAAC,CAAC,CAAC,IAAE,CAACa,GAAG,CAACF,GAAG,CAACX,OAAO,CAAC,CAAC,CAAC,EACtC,CACN,GANOa,GAAG,CAAC1B,EAOT,CACN,CAAC,cAEFrG,IAAA,MAAAgG,QAAA,CAAG,4BAA0B,CAAG,CACjC,CACE,CAAC,EACH,CAAC,cAEN9F,KAAA,QAAK6F,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/B9F,KAAA,OAAA8F,QAAA,EAAI,0BAAc,CAAC5F,gBAAgB,CAACsH,OAAO,CAACnG,QAAQ,CAAC,GAAC,EAAI,CAAC,cAC3DvB,IAAA,QAAK+F,SAAS,CAAC,cAAc,CAAAC,QAAA,CAC1B5F,gBAAgB,CAACkC,IAAI,CAACf,QAAQ,CAACgB,MAAM,CAAG,CAAC,CACxCnC,gBAAgB,CAACkC,IAAI,CAACf,QAAQ,CAAC0B,GAAG,CAAC+E,IAAI,eACrC9H,KAAA,QAAmB6F,SAAS,CAAC,cAAc,CAAAC,QAAA,eACzChG,IAAA,WAAAgG,QAAA,CAASgC,IAAI,CAAC9E,IAAI,CAAS,CAAC,CAC3B8E,IAAI,CAACJ,GAAG,EAAII,IAAI,CAACH,GAAG,eACnB3H,KAAA,QAAK6F,SAAS,CAAC,aAAa,CAAAC,QAAA,EACzBgC,IAAI,CAACJ,GAAG,CAACV,OAAO,CAAC,CAAC,CAAC,CAAC,IAAE,CAACc,IAAI,CAACH,GAAG,CAACX,OAAO,CAAC,CAAC,CAAC,EACxC,CACN,GANOc,IAAI,CAAC3B,EAOV,CACN,CAAC,cAEFrG,IAAA,MAAAgG,QAAA,CAAG,iCAA+B,CAAG,CACtC,CACE,CAAC,EACH,CAAC,cAEN9F,KAAA,QAAK6F,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/B9F,KAAA,OAAA8F,QAAA,EAAI,+BAAmB,CAAC5F,gBAAgB,CAACsH,OAAO,CAAClG,aAAa,CAAC,GAAC,EAAI,CAAC,cACrExB,IAAA,QAAK+F,SAAS,CAAC,cAAc,CAAAC,QAAA,CAC1B5F,gBAAgB,CAACkC,IAAI,CAACd,aAAa,CAACe,MAAM,CAAG,CAAC,CAC7CnC,gBAAgB,CAACkC,IAAI,CAACd,aAAa,CAACyB,GAAG,CAACgF,OAAO,eAC7C/H,KAAA,QAAsB6F,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC5ChG,IAAA,WAAAgG,QAAA,CAASiC,OAAO,CAAC/E,IAAI,CAAS,CAAC,CAC9B+E,OAAO,CAACL,GAAG,EAAIK,OAAO,CAACJ,GAAG,eACzB3H,KAAA,QAAK6F,SAAS,CAAC,aAAa,CAAAC,QAAA,EACzBiC,OAAO,CAACL,GAAG,CAACV,OAAO,CAAC,CAAC,CAAC,CAAC,IAAE,CAACe,OAAO,CAACJ,GAAG,CAACX,OAAO,CAAC,CAAC,CAAC,EAC9C,CACN,GANOe,OAAO,CAAC5B,EAOb,CACN,CAAC,cAEFrG,IAAA,MAAAgG,QAAA,CAAG,sCAAoC,CAAG,CAC3C,CACE,CAAC,EACH,CAAC,EACH,CAAC,cAEN9F,KAAA,QAAK6F,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB9F,KAAA,MAAA8F,QAAA,eAAGhG,IAAA,WAAAgG,QAAA,CAAQ,cAAY,CAAQ,CAAC,IAAC,CAAC5F,gBAAgB,CAAC0B,KAAK,CAACd,MAAM,CAAC,mBAAiB,CAACZ,gBAAgB,CAAC0B,KAAK,CAAChB,QAAQ,CAAC,IAAE,CAACV,gBAAgB,CAAC0B,KAAK,CAACf,SAAS,CAAC,GAAC,EAAG,CAAC,cAC3Jb,KAAA,MAAA8F,QAAA,eAAGhG,IAAA,WAAAgG,QAAA,CAAQ,wBAAsB,CAAQ,CAAC,IAAC,CAAC5F,gBAAgB,CAACsH,OAAO,CAAC5E,KAAK,EAAI,CAAC,EAC5E,CAAC,EACH,CACN,EACE,CACN,EACG,CAAC,EACJ,CAAC,CAEV,CAEA,cAAe,CAAA3C,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}